
name: MCP Tool Tests

on:
  push:
    branches:
      - main
      - integration-test-feature
  pull_request:
    branches:
      - main

jobs:
  run-mcp-tests:
    name: Run MCP Tool Tests
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install MCP SDK and dependencies
        run: |
          python -m pip install --upgrade pip

          # Install the actual MCP Python SDK
          pip install "mcp[cli]>=1.6.0"

          # Install MCP server dependencies from pyproject.toml
          pip install loguru>=0.7.0 pydantic>=2.10.6 boto3>=1.34.0 requests>=2.31.0 pyyaml>=6.0.0 cachetools>=5.3.0

          # Install test requirements
          cd src/aws-dataprocessing-mcp-server/IntegrationTest
          pip install -r requirements.txt

          # Add the server package to Python path
          echo "PYTHONPATH=$(pwd)/../..:$PYTHONPATH" >> $GITHUB_ENV

          # List installed packages for debugging
          pip list | grep -E "(mcp|pydantic|loguru|boto3)"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Test credentials
        run: aws sts get-caller-identity

      - name: Verify MCP server structure
        run: |
          echo "Checking MCP server directory structure:"
          find src/aws-dataprocessing-mcp-server -name "*.py" | head -5

          # Verify the server.py exists
          if [ -f "src/aws-dataprocessing-mcp-server/awslabs/aws_dataprocessing_mcp_server/server.py" ]; then
            echo "✓ Server file found"
          else
            echo "✗ Server file not found"
            exit 1
          fi

          # Test MCP imports
          python -c "import mcp; print('✓ MCP package imported successfully')"
          python -c "from mcp.server.fastmcp import FastMCP; print('✓ FastMCP imported successfully')"
          python -c "from mcp.types import CallToolResult; print('✓ CallToolResult imported successfully')"

      - name: Update server path in test configuration
        run: |
          cd src/aws-dataprocessing-mcp-server/IntegrationTest

          # Get absolute path to the server directory
          current_dir = os.path.dirname(os.path.abspath(__file__))
          default_server_path = os.path.join(current_dir, "../awslabs/aws_dataprocessing_mcp_server")
          server_path = os.environ.get("MCP_SERVER_PATH", os.path.normpath(default_server_path)
          echo "Using server path: ${server_path}"

          # Update the server path in run_tests.py
          sed -i "s|server_path = os.environ.get(\"MCP_SERVER_PATH\", \"../awslabs/aws_dataprocessing_mcp_server\")|server_path = \"${server_path}\"|g" run_tests.py

          # Verify the change
          echo "Updated server path configuration:"
          grep -A2 -B2 "server_path =" run_tests.py

      - name: Run MCP integration tests (fail on test failure)
        continue-on-error: false
        run: |
          cd src/aws-dataprocessing-mcp-server/IntegrationTest

          echo "Starting MCP integration tests..."
          echo "Python path: $PYTHONPATH"

          # Run the tests
          python -u run_tests.py
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_SDK_LOAD_CONFIG: 1
          TEST_CASES_PATH: tests/glue/test_cases.json

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mcp-test-reports
          path: src/aws-dataprocessing-mcp-server/IntegrationTest/test_reports/
          retention-days: 30
